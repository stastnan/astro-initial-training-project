---
import Section from "./Section.astro";
import { server } from "../actions";
import { isInputError } from "astro:actions";

const result = Astro.getActionResult(server.contact);
const errs = isInputError(result?.error) ? result.error.fields : {};
---

<Section>
  <div class="wrapper">
    <h2 class="h">Contact me</h2>
    <p class="description">
      Have a project in mind? Send me a message and Iâ€™ll get back to you.
    </p>

    {
      result?.data && result.data.ok && (
        <p class="alert success">Thanks! Your message was sent.</p>
      )
    }
    {
      result?.error && (
        <p class="alert error">Something went wrong. Please try again.</p>
      )
    }

    <form method="POST" action={server.contact} class="form" novalidate>
      <label>
        <span>Name</span>
        <input
          name="name"
          required
          autocomplete="name"
          aria-invalid={!!errs.name || undefined}
        />
        {errs.name && <small class="field-error">{errs.name}</small>}
      </label>

      <label>
        <span>Email</span>
        <input
          type="email"
          name="email"
          required
          autocomplete="email"
          aria-invalid={!!errs.email || undefined}
        />
        {errs.email && <small class="field-error">{errs.email}</small>}
      </label>

      <label>
        <span>Message</span>
        <textarea
          name="message"
          rows="6"
          required
          aria-invalid={!!errs.message || undefined}></textarea>
        {errs.message && <small class="field-error">{errs.message}</small>}
      </label>

      <!-- Honeypot -->
      <label class="hp" aria-hidden="true">
        <input name="company" tabindex="-1" autocomplete="off" />
      </label>

      <button class="btn primary" type="submit">Send Message</button>
    </form>
  </div>
</Section>

<style>
  #contact {
    padding: 60px 0;
    border-top: 1px solid #eee;
  }

  .wrapper {
    max-width: 560px;
    margin: 0 auto;
    text-align: center;
  }

  .h {
    margin-bottom: 8px;
    font-size: 32px;
  }

  .description {
    margin-bottom: 20px;
    color: var(--dark);
  }

  .form {
    display: grid;
    gap: 16px;
    margin-top: 20px;
    text-align: left;
  }

  label {
    display: grid;
    gap: 6px;
  }

  input,
  textarea {
    border: 1px solid var(--primary, #444);
    border-radius: 8px;
    padding: 12px 14px;
    font: inherit;
  }

  .btn.primary {
    background: var(--primary);
    color: #fff;
    border: none;
    border-radius: 10px;
    padding: 12px 20px;
    cursor: pointer;
    width: 100%;
    justify-self: stretch;
  }

  .alert {
    margin-top: 12px;
  }
  .success {
    color: #1b8f3a;
  }
  .error {
    color: #c0392b;
  }
  .field-error {
    color: #c0392b;
    font-size: 0.9em;
  }

  .hp {
    position: absolute;
    left: -9999px;
    visibility: hidden;
  }
</style>
